// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221013071602_Increaseseeding")]
    partial class Increaseseeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(536),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(569),
                            Name = "Fallout New Vegas",
                            Price = 14.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(577),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(579),
                            Name = "Splatoon 3",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(582),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(583),
                            Name = "Animal Crossing",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(586),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(588),
                            Name = "Fallout 3",
                            Price = 14.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(592),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(593),
                            Name = "Fallout 4",
                            Price = 14.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(596),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(598),
                            Name = "Splatoon 2",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(600),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(602),
                            Name = "Splatoon",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(605),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(606),
                            Name = "Rabbits",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(609),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(611),
                            Name = "Rayman",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(613),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(615),
                            Name = "Assassins creed",
                            Price = 59.99f,
                            PublisherId = new Guid("00000000-0000-0000-0000-000000000003")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GenreId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GamesGenre");

                    b.HasData(
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000001"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000003"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000007"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000008"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000009"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000010"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            GenreId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000007")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(637),
                            Description = "Fist person shooter",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(635),
                            Name = "FPS"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(641),
                            Description = "Fist person shooter but in the third person",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(640),
                            Name = "Third person shooter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(645),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(644),
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(649),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(648),
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(653),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(651),
                            Name = "Party game"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(657),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(655),
                            Name = "Story driven"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(661),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(659),
                            Name = "Open Word"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(664),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(663),
                            Name = "Nonlinear gameplay"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(668),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(666),
                            Name = "Action-adventure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(672),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(670),
                            Name = "Stealth"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Country = "America",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(689),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(691),
                            Name = "Bethesda"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Country = "Japan",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(694),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(696),
                            Name = "Nintendo"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Country = "America",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(698),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(699),
                            Name = "Ubisoft"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Country = "Japan",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(702),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(703),
                            Name = "Square inex"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Country = "America",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(706),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(707),
                            Name = "Sony"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Country = "America",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(710),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(711),
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Country = "Japan",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(713),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(715),
                            Name = "The pokemon company"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Country = "Sweden",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(717),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(719),
                            Name = "CD project"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Country = "Japan",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(721),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(722),
                            Name = "Arc System Works"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Country = "America",
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(725),
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(726),
                            Name = "Interplay Entertainment"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(775),
                            Email = "FirstUser@gmail.com",
                            FirstName = "First",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(773),
                            LastName = "User",
                            UserName = "FirstUser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(779),
                            Email = "SecondUser@gmail.com",
                            FirstName = "Second",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(777),
                            LastName = "User",
                            UserName = "TimTheDestroyerXx400"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(783),
                            Email = "ThirdUser@gmail.com",
                            FirstName = "Third",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(781),
                            LastName = "User",
                            UserName = "UserTheThird"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(826),
                            Email = "FourthUser@gmail.com",
                            FirstName = "Fourth",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(824),
                            LastName = "User",
                            UserName = "UserTheFourth"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(830),
                            Email = "FifthUser@gmail.com",
                            FirstName = "Fifth",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(828),
                            LastName = "User",
                            UserName = "UserTheFifth"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(834),
                            Email = "SixUser@gmail.com",
                            FirstName = "Six",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(832),
                            LastName = "User",
                            UserName = "UserTheSith"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(838),
                            Email = "SevenUser@gmail.com",
                            FirstName = "Seven",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(836),
                            LastName = "User",
                            UserName = "UserTheSeven"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(842),
                            Email = "EigthUser@gmail.com",
                            FirstName = "Eigth",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(840),
                            LastName = "User",
                            UserName = "UserTheEigth"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(846),
                            Email = "NinthUser@gmail.com",
                            FirstName = "Ninth",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(845),
                            LastName = "User",
                            UserName = "UserTheNinth"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(850),
                            Email = "XUser@gmail.com",
                            FirstName = "X",
                            LastEditedOn = new DateTime(2022, 10, 13, 9, 16, 2, 548, DateTimeKind.Local).AddTicks(848),
                            LastName = "User",
                            UserName = "UserX"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.UserGame", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("UsersGames");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000002"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000004"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000005"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000006"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000007"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000008"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000009"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000009"),
                            GameId = new Guid("00000000-0000-0000-0000-000000000008")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Game", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.GameGenre", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.UserGame", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
